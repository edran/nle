---
name: Build & deploy Docker

on:
  schedule:
    - cron: "0 6,18 * * *"
  push:
    paths:
      - "docker/Dockerfile*"
    tags-ignore:
      # We ignore all tags, since paths filters don't work for tags events, and
      # we use releases instead.
      - "*"
  pull_request:
    paths:
      - "docker/Dockerfile*"
  release:
    types: [released]

jobs:
  build_bionic:
    name: Build bionic image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: |
        SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
        docker build -f docker/Dockerfile-bionic . -t edran/nle:commit-bionic-$SHORT_SHA
    - name: Deploy image
      run: |
        SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
        docker tag edran/nle:commit-bionic-$SHORT_SHA edran/nle:dev-bionic
        docker push edran/nle:dev-bionic
        docker push edran/nle:commit-bionic-$SHORT_SHA
    - name: Check version matches release tag
      if: github.event_name == 'release' && github.event.action == 'released'
      run: |
        echo "v$(cat version.txt)"
        echo "{ github.event.release.tag_name }"
        echo $([[ "{ github.event.release.tag_name }" == "v$(cat version.txt)" ]])
        [[ "{ github.event.release.tag_name }" == "v$(cat version.txt)"]]
    - name: Deploy new version tag
      if: github.event_name == 'release' && github.event.action == 'released'
      run: |
        docker tag edran/nle:dev-bionic edran/nle:{ github.event.release.tag_name }-bionic
        docker push edran/nle:{ github.event.release.tag_name }-bionic

  build_xenial:
    name: Build xenial image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build image
      run: |
        SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
        docker build -f docker/Dockerfile-xenial . -t edran/nle:commit-xenial-$SHORT_SHA
    - name: Deploy image
      run: |
        SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
        docker tag edran/nle:commit-xenial-$SHORT_SHA edran/nle:dev-xenial
        docker push edran/nle:dev-xenial
        docker push edran/nle:commit-xenial-$SHORT_SHA
    - name: Check version matches release tag
      if: github.event_name == 'release' && github.event.action == 'released'
      run: |
        echo "v$(cat version.txt)"
        echo "{ github.event.release.tag_name }"
        echo $([[ "{ github.event.release.tag_name }" == "v$(cat version.txt)" ]])
        [[ "{ github.event.release.tag_name }" == "v$(cat version.txt)"]]
    - name: Deploy new version tag
      if: github.event_name == 'release' && github.event.action == 'released'
      run: |
        docker tag edran/nle:dev-xenial edran/nle:{ github.event.release.tag_name }-xenial
        docker tag edran/nle:dev-xenial edran/nle:stable
        docker push edran/nle:{ github.event.release.tag_name }-xenial
        docker push edran/nle:stable
...
